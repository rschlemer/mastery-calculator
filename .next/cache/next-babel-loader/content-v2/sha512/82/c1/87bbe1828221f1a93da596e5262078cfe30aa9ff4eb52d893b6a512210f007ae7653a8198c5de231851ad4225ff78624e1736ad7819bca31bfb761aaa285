{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ras/Documents/git/mastery-calculator/pages/probabilites.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport * as jStat from 'jstat';\n\nvar Probabilities = /*#__PURE__*/function (_Component) {\n  _inherits(Probabilities, _Component);\n\n  var _super = _createSuper(Probabilities);\n\n  function Probabilities(props) {\n    var _this;\n\n    _classCallCheck(this, Probabilities);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      probability: 0,\n      trials: 0,\n      amount: 1,\n      exact: 0,\n      atMost: 0,\n      atLeast: 0\n    };\n    return _this;\n  }\n\n  _createClass(Probabilities, [{\n    key: \"runCalcs\",\n    value: function runCalcs() {\n      var exact = jStat.binomial.pdf(this.amount, this.trials, this.probability);\n      var atMost = jStat.binomial.pdf(this.amount, this.trials, this.probability);\n      var atLeast = 1 - jStat.binomial.pdf(this.amount - 1, this.trials, this.probability);\n      this.setState({});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.probability,\n            onChange: function onChange(e) {\n              _this2.setState({\n                probability: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.trials,\n            onChange: function onChange(e) {\n              _this2.setState({\n                trials: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.amount,\n            onChange: function onChange(e) {\n              _this2.setState({\n                amount: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.runCalcs();\n            },\n            children: \"Calculate Probabilities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [parseFloat(this.state.exact).toFixed(2) + \"%\", \" chance of getting exacltly \", this.amount, \" drops.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [parseFloat(this.state.atMost).toFixed(2) + \"%\", \" chance of getting at most \", this.amount, \" drops.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [parseFloat(this.state.atLeast).toFixed(2) + \"%\", \" chance of getting at least \", this.amount, \" drops.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Probabilities;\n}(Component);\n\nexport { Probabilities as default };","map":{"version":3,"sources":["/Users/ras/Documents/git/mastery-calculator/pages/probabilites.js"],"names":["Component","jStat","Probabilities","props","state","probability","trials","amount","exact","atMost","atLeast","binomial","pdf","setState","e","target","value","runCalcs","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import { Component } from 'react';\n\nimport * as jStat from 'jstat';\n\n\nexport default class Probabilities extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            probability: 0,\n            trials: 0,\n            amount: 1,\n            exact: 0,\n            atMost: 0,\n            atLeast: 0\n        }\n    }\n\n    runCalcs() {\n        let exact = jStat.binomial.pdf(this.amount, this.trials, this.probability)\n        let atMost = jStat.binomial.pdf(this.amount, this.trials, this.probability)\n        let atLeast = 1 - jStat.binomial.pdf(this.amount - 1, this.trials, this.probability)\n        this.setState({\n\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <input value={this.state.probability} onChange={(e) => { this.setState({ probability: e.target.value }) }} />\n                    <input value={this.state.trials} onChange={(e) => { this.setState({ trials: e.target.value }) }} />\n                    <input value={this.state.amount} onChange={(e) => { this.setState({ amount: e.target.value }) }} />\n                    <button type='button' onClick={() => this.runCalcs()}>Calculate Probabilities</button>\n                </div>\n                <div>\n                    <p>{parseFloat(this.state.exact).toFixed(2) + \"%\"} chance of getting exacltly {this.amount} drops.</p>\n                    <p>{parseFloat(this.state.atMost).toFixed(2) + \"%\"} chance of getting at most {this.amount} drops.</p>\n                    <p>{parseFloat(this.state.atLeast).toFixed(2) + \"%\"} chance of getting at least {this.amount} drops.</p>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}