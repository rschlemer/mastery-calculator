{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ras/Documents/git/mastery-calculator/pages/probabilites.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\n\nvar Probabilities = /*#__PURE__*/function (_Component) {\n  _inherits(Probabilities, _Component);\n\n  var _super = _createSuper(Probabilities);\n\n  function Probabilities(props) {\n    var _this;\n\n    _classCallCheck(this, Probabilities);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      probability: 0,\n      trials: 0,\n      amount: 0\n    };\n    return _this;\n  }\n\n  _createClass(Probabilities, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.probability,\n          onChange: function onChange(e) {\n            _this2.setState({\n              probability: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.trials\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Probabilities;\n}(Component);\n\nexport { Probabilities as default };","map":{"version":3,"sources":["/Users/ras/Documents/git/mastery-calculator/pages/probabilites.js"],"names":["Component","Probabilities","props","state","probability","trials","amount","e","setState","target","value"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;IAEqBC,a;;;;;AACjB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,CADJ;AAETC,MAAAA,MAAM,EAAE,CAFC;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAFe;AAOlB;;;;6BAEQ;AAAA;;AACL,0BACI;AAAA,gCACI;AAAO,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,WAAzB;AAAsC,UAAA,QAAQ,EAAE,kBAACG,CAAD,EAAO;AAAE,YAAA,MAAI,CAACC,QAAL,CAAc;AAAEJ,cAAAA,WAAW,EAAEG,CAAC,CAACE,MAAF,CAASC;AAAxB,aAAd;AAAgD;AAAzG;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;;;;EAlBsCN,S;;SAAtBC,a","sourcesContent":["import { Component } from 'react';\n\nexport default class Probabilities extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            probability: 0,\n            trials: 0,\n            amount: 0\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <input value={this.state.probability} onChange={(e) => { this.setState({ probability: e.target.value }) }} />\n                <input value={this.state.trials} />\n                <input value={this.state.amount} />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}