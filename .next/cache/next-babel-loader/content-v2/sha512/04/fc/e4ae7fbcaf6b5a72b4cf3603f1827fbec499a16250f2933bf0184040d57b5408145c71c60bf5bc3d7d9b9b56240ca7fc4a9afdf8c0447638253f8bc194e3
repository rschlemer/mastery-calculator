{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ras/Documents/git/mastery-calculator/pages/probabilites.js\";\nimport { Component } from 'react';\n\nconst jStat = require('jstat');\n\nexport default class Probabilities extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      probability: 0,\n      trials: 0,\n      amount: 0\n    };\n  }\n\n  runCalcs() {\n    jStat.bi;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.probability,\n        onChange: e => {\n          this.setState({\n            probability: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.trials,\n        onChange: e => {\n          this.setState({\n            trials: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.amount,\n        onChange: e => {\n          this.setState({\n            amount: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => this.runCalcs(),\n        children: \"Calculate Probabilities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ras/Documents/git/mastery-calculator/pages/probabilites.js"],"names":["Component","jStat","require","Probabilities","constructor","props","state","probability","trials","amount","runCalcs","bi","render","e","setState","target","value"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAGA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACjDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,CADJ;AAETC,MAAAA,MAAM,EAAE,CAFC;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH;;AAEDC,EAAAA,QAAQ,GAAG;AACPT,IAAAA,KAAK,CAACU,EAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAO,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,WAAzB;AAAsC,QAAA,QAAQ,EAAGM,CAAD,IAAO;AAAE,eAAKC,QAAL,CAAc;AAAEP,YAAAA,WAAW,EAAEM,CAAC,CAACE,MAAF,CAASC;AAAxB,WAAd;AAAgD;AAAzG;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWE,MAAzB;AAAiC,QAAA,QAAQ,EAAGK,CAAD,IAAO;AAAE,eAAKC,QAAL,CAAc;AAAEN,YAAAA,MAAM,EAAEK,CAAC,CAACE,MAAF,CAASC;AAAnB,WAAd;AAA2C;AAA/F;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWG,MAAzB;AAAiC,QAAA,QAAQ,EAAGI,CAAD,IAAO;AAAE,eAAKC,QAAL,CAAc;AAAEL,YAAAA,MAAM,EAAEI,CAAC,CAACE,MAAF,CAASC;AAAnB,WAAd;AAA2C;AAA/F;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAM,KAAKN,QAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAvBgD","sourcesContent":["import { Component } from 'react';\n\nconst jStat = require('jstat');\n\n\nexport default class Probabilities extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            probability: 0,\n            trials: 0,\n            amount: 0\n        }\n    }\n\n    runCalcs() {\n        jStat.bi\n    }\n\n    render() {\n        return (\n            <div>\n                <input value={this.state.probability} onChange={(e) => { this.setState({ probability: e.target.value }) }} />\n                <input value={this.state.trials} onChange={(e) => { this.setState({ trials: e.target.value }) }} />\n                <input value={this.state.amount} onChange={(e) => { this.setState({ amount: e.target.value }) }} />\n                <button type='button' onClick={() => this.runCalcs()}>Calculate Probabilities</button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}