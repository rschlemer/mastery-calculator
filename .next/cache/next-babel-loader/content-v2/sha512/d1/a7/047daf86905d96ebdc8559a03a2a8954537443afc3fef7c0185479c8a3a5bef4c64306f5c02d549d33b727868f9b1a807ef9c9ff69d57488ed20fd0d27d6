{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ras/Documents/git/mastery-calculator/pages/probabilites.js\";\nimport { Component } from 'react';\nimport * as jStat from 'jstat';\nexport default class Probabilities extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      probability: 0,\n      trials: 0,\n      amount: 1,\n      exact: 0,\n      atMost: 0,\n      atLeast: 0\n    };\n  }\n\n  runCalcs() {\n    let exact = jStat.binomial.pdf(this.amount, this.trials, this.probability);\n    let atMost = jStat.binomial.pdf(this.amount, this.trials, this.probability);\n    let atLeast = 1 - jStat.binomial.pdf(this.amount - 1, this.trials, this.probability);\n    this.setState({});\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.probability,\n          onChange: e => {\n            this.setState({\n              probability: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.trials,\n          onChange: e => {\n            this.setState({\n              trials: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.amount,\n          onChange: e => {\n            this.setState({\n              amount: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.runCalcs(),\n          children: \"Calculate Probabilities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [parseFloat(this.state.exact).toFixed(2) + \"%\", \" chance of getting exacltly \", this.amount, \" drops.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [parseFloat(this.state.atMost).toFixed(2) + \"%\", \" chance of getting at most \", this.amount, \" drops.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [parseFloat(this.state.atLeast).toFixed(2) + \"%\", \" chance of getting at least \", this.amount, \" drops.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ras/Documents/git/mastery-calculator/pages/probabilites.js"],"names":["Component","jStat","Probabilities","constructor","props","state","probability","trials","amount","exact","atMost","atLeast","runCalcs","binomial","pdf","setState","render","e","target","value","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import { Component } from 'react';\n\nimport * as jStat from 'jstat';\n\n\nexport default class Probabilities extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            probability: 0,\n            trials: 0,\n            amount: 1,\n            exact: 0,\n            atMost: 0,\n            atLeast: 0\n        }\n    }\n\n    runCalcs() {\n        let exact = jStat.binomial.pdf(this.amount, this.trials, this.probability)\n        let atMost = jStat.binomial.pdf(this.amount, this.trials, this.probability)\n        let atLeast = 1 - jStat.binomial.pdf(this.amount - 1, this.trials, this.probability)\n        this.setState({\n\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <input value={this.state.probability} onChange={(e) => { this.setState({ probability: e.target.value }) }} />\n                    <input value={this.state.trials} onChange={(e) => { this.setState({ trials: e.target.value }) }} />\n                    <input value={this.state.amount} onChange={(e) => { this.setState({ amount: e.target.value }) }} />\n                    <button type='button' onClick={() => this.runCalcs()}>Calculate Probabilities</button>\n                </div>\n                <div>\n                    <p>{parseFloat(this.state.exact).toFixed(2) + \"%\"} chance of getting exacltly {this.amount} drops.</p>\n                    <p>{parseFloat(this.state.atMost).toFixed(2) + \"%\"} chance of getting at most {this.amount} drops.</p>\n                    <p>{parseFloat(this.state.atLeast).toFixed(2) + \"%\"} chance of getting at least {this.amount} drops.</p>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}